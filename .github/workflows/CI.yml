name: Build

on: push
jobs:
  Everything:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.302
    - name: Setup .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100-preview.7.20366.6
    - name: Enable side-by-side .NET Core SDK installations
      # This step is a workaround as specified in https://github.com/actions/setup-dotnet/issues/25#issuecomment-646925506
      shell: pwsh
      run: |
        $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
        $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
        $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
        foreach ($dir in $directories) {
          $from = $dir.FullName;
          $to = "$root/$version";
          Write-Host Copying from $from to $to;
          Copy-Item "$from\*" $to -Recurse -Force;
        }
    - name: Test
      run: dotnet run --project CSharp9/CSharp9.csproj
